Install
=======

This section contains the instruction to install ``BioImageIT_core`` and the toolboxes configuration files
to have a local working instance of ``BioImageIT_core`` for development.

Install BioImageIT_core
-----------------------

To install ``BioImageIT_core`` you need to have `Pipenv <https://pipenv.pypa.io/en/latest/#install-pipenv-today>`_ installed, as this is used to manage the dependencies.

.. code-block:: shell

    mkdir bioimageit
    git clone https://gitlab.inria.fr/bioimage-it/BioImageIT_core.git
    cd BioImageIT_core
    pipenv sync

Alternatively, it is possible to install the dependencies with pip, but this is not recommended as they might clash with other projects on your computer:

.. code-block:: shell

    pip install --user -r requirements.txt

Install toolboxes
-----------------

``BioImageIT_core`` uses a toolboxes index of remotely packaged tools. The toolboxes index is not installed by default. To install the
toolboxes run the following commands:

.. code-block:: shell

    cd bioimageit
    git clone https://gitlab.inria.fr/bioimage-it/toolboxes.git
    cd BioImageIT_core
    python3 install.py

The install script unpack the toolboxes, and create a configuration file. The install script ask your user name. This is the username
that will appear in the metadata files generated by ``BioImageIT_core``

Configure BioImageIT_core
-------------------------

If you need to manually configure ``BioImageIT_core`` you need to edit the ``config.json`` file. You copy & paste
the ``config.sample.json`` available in the ``BioImageIT_core`` root directory, or you can use the ``config.json``
file generated by the install script. The configuration file looks like this:

.. code-block:: javascript

    {
        "metadata": {
            "service": "LOCAL"
        },
        "process": {
            "service": "LOCAL",
            "xml_dirs": [
                "/use/absolute/path/to/bioimageit/toolboxes/tools"
            ],
            "categories": "/use/absolute/path/to/bioimageit/toolboxes/toolboxes.json",
            "tools": "/use/absolute/path/to/bioimageit/toolboxes/tools.json"
        },
        "runner": {
            "service": "SINGULARITY"
        },
        "user": {
            "name": "your user name"
        }
    }

Metadata
^^^^^^^^

The ``metadata`` section allows to configure how the metadata are handled. In the exemple above, we use the LOCAL service that
have no settings.

Process
^^^^^^^

The ``process`` section contains all the processing tools desciptions. In the example above, we use the LOCAL service meaning
that all the tools informations (XML wrappers) are copied locally. The variable ``xml_dirs`` is the path of the directories
containing the processing tools XML wrappers. The variable ``categories`` is the path to the JSON file containing the
toolboxes list. The variable ``tools`` is the path to the index file containing the list of all the availables tools.

Runner
^^^^^^

The ``runner`` section contains the processing tools runner configuration.
The possible runners are:

* LOCAL: runs the tools installed locally on the workstation. In this case the tool must be added to the system `PATH`:

.. code-block:: javascript

    "runner": {
        "service": "LOCAL"
    }

* SINGULARITY: runs the tools using *Singularity*. In this case you need to install `Singularity <https://sylabs.io/guides/3.5/user-guide/>`_:

.. code-block:: javascript

    "runner": {
        "service": "SINGULARITY"
    }

* DOCKER: runs the tools using *Docker*. In this case you need to install `Docker <https://docs.docker.com>`_. Docker needs to mount your data directory into the container. To do this, please specify the `working_dir` path in your config file:

.. code-block:: javascript

    "runner": {
        "service": "DOCKER",
        "working_dir": "/home/full/path/to/userdata/"
    }

* ALLGO: runs the tools using the `AllGo <https://allgo18.inria.fr/>`_ platform. In this case you do not need to install anything localy. Nevertheless, all the tools in BioImageIT tools index may not be available in AllGo. When using AllGo, you need to add you AllGo token (account authentication) in the config file or in a `.allgo_token` file in your home directory.

.. code-block:: javascript

    "runner": {
        "service": "ALLGO",
        "token": "CopyYourAllgoTokenHere"
    }

User
^^^^

Finally, the ``user`` section contains the user name that will be printed in the metadata every time a data is imported or
processed by this instance of ``BioImageIT_core``. This allows traceability.
